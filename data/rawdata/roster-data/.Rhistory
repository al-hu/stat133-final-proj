show.legend = TRUE) +
ggtitle("Women's High Jump World Records Progression")
plot3 + theme_bw()
# Chunk 36
# step-line plot, with points, showing the progression of men records
# (points colored by country)
plot4 <- ggplot(data = mens,
mapping = aes(x = date, y = height)) +
geom_step(color = "light gray",
show.legend = FALSE,
size = 1.3) +
geom_point(aes(color = country),
show.legend = TRUE) +
ggtitle("Men's High Jump World Records Progression")
plot4 + theme_bw()
# Chunk 37
# Model for women
records_female <- subset(records, gender == 'female')
# regression of 'height' on 'year'
model_women <- lm(height ~ year, data = records_female)
model_women
summary(model_women)
# Chunk 38
# predictions for olympic years
predicted_value_women <- predict(model_women,
data.frame(year = c(2000, 2004,
2008, 2012,
2016)))
predicted_value_women
women_prediction <- data.frame(predicted_value_women,
row.names = c("year 2000", "year 2004",
"year 2008", "year 2012",
"year 2016"))
women_prediction
# Chunk 39
# Model for men
records_male <- subset(records, gender == 'male')
# regression of 'height' on 'year'
model_men <- lm(height ~ year, data = records_male)
model_men
summary(model_men)
# Chunk 40
# predictions for olympic years
predicted_value_men <- predict(model_men,
data.frame(year = c(2000, 2004,
2008, 2012,
2016)))
predicted_value_men
men_prediction <- data.frame(predicted_value_men,
row.names = c("year 2000", "year 2004",
"year 2008", "year 2012",
"year 2016"))
men_prediction
rm
ls
rm
library(XML)
basketref <- 'http://www.basketball-reference.com'
library(XML)
basketref <- 'http://www.basketball-reference.com'
url <- paste0(basketref, '/leagues/NBA_2016.html')
doc <- htmlParse(url)
team_rows <- getNodeSet(doc, "//th[@scope='row']/a")
team_hrefs <- xmlSApply(team_rows, xmlAttrs)
team_names <- substr(team_hrefs, 8, 10)
url_team <- paste0(basketref, team_hrefs[1])
html_doc <- readLines(con = url_team)
begin_roster <- grep('id="roster"', html_doc)
line_counter <- begin_roster
while (!grepl("</table>", html_doc[line_counter])) {
line_counter <- line_counter + 1
}
roster <- readHTMLTable(html_doc[begin_roster:line_counter])
write.csv(roster,
file = paste0('rawdata/roster-data/roster-', team_names[1], '.csv'))
library(XML)
basketref <- 'http://www.basketball-reference.com'
download.file(http://www.basketball-reference.com/teams/GSW/2016.html#all_roster)
install.packages(XML)
install.packages("XML")
install.packages("XML")
library(XML)
basketref <- 'http://www.basketball-reference.com'
url <- paste0(basketref, '/leagues/NBA_2016.html')
doc <- htmlParse(url)
team_rows <- getNodeSet(doc, "//th[@scope='row']/a")
team_hrefs <- xmlSApply(team_rows, xmlAttrs)
team_names <- substr(team_hrefs, 8, 10)
url_team <- paste0(basketref, team_hrefs[1])
html_doc <- readLines(con = url_team)
begin_roster <- grep('id="roster"', html_doc)
# find the line where the html ends
line_counter <- begin_roster
while (!grepl("</table>", html_doc[line_counter])) {
line_counter <- line_counter + 1
}
roster <- readHTMLTable(html_doc[begin_roster:line_counter])
write.csv(roster,
file = paste0('rawdata/roster-data/roster-', team_names[1], '.csv'))
roster <- readHTMLTable(html_doc[begin_roster:line_counter])
write.csv(roster,
file = paste0('rawdata/roster-data/roster-', team_names[1], '.csv'))
roster <- readHTMLTable(html_doc[begin_roster:line_counter])
write.csv(roster,
file = paste0('roster-', team_names[1], '.csv'))
library(XML)
setwd(~/Desktop)
# "/home/albert/Documents/Albert/Fall16/Stat133/stat133-final-proj/data"
setwd(~/Desktop)
setwd(/Desktop)
setwd(~/Desktop)
# =========================================================================
# Title: Scrape raw html tables
#
# Description:
# This script contains R code to help you scrape the tables
# 'Roster', 'Totals', and 'Salaries', for a specific NBA team.
# Each table is read as a data.frame, which is then exported as a csv file
# to the corresponding subdirectory in the 'rawdata/' folder
# =========================================================================
# =========================================================================
# Make sure to be have the correct working directory set up or else
# you might get errors!  For me, (Albert), my working directory was
# "/home/albert/Documents/Albert/Fall16/Stat133/stat133-final-proj/data"
# =========================================================================
library(XML)
# base url
basketref <- 'http://www.basketball-reference.com'
# =========================================================================
# The desired html tables are in URL's having this form:
# "http://www.basketball-reference.com/teams/CLE/2016.html"
# "http://www.basketball-reference.com/teams/TOR/2016.html"
# "http://www.basketball-reference.com/teams/MIA/2016.html"
# ...
#
# The first step is to extract the part of the url associate with each
# team, that is: /teams/CLE/2016.html, /teams/TOR/2016.html, ...
#
# To do that, we'll scrape the the page:
# "http://www.basketball-reference.com/leagues/NBA_2016.html"
# in order to extract the 'href' attributes of the anchor tags:
# /teams/CLE/2016.html
# /teams/TOR/2016.html
# /teams/MIA/2016.html
# ...
#
# These attributes are extracted as a character vector
# (these will be used to parse each team's page)
# =========================================================================
# parse 'http://www.basketball-reference.com/leagues/NBA_2016.html'
url <- paste0(basketref, '/leagues/NBA_2016.html')
doc <- htmlParse(url)
# identify nodes with anchor tags for each team and
# extract the href attribute from the anchor tags
team_rows <- getNodeSet(doc, "//th[@scope='row']/a")
team_hrefs <- xmlSApply(team_rows, xmlAttrs)
# just in case, here's the character vector with the team abbreviations
team_names <- substr(team_hrefs, 8, 10)
# =========================================================================
# Scrape the tables Roster, Totals, and Salaries.
# Now we can pass the first value in 'team_hrefs' to the base url, and form:
# http://www.basketball-reference.com/teams/CLE/2016.html
#
# The code below scrapes the tables for the Cleveland Cavaliers (CLE)
# You will have to write a loop that iterates over each team page
# and scrapes the required tables
# =========================================================================
# Read html document (as a character vector) for a given team
# (first team is "CLE")
for (i in 1:length(team_hrefs)) {
url_team <- paste0(basketref, team_hrefs[i])
print(i)
html_doc <- readLines(con = url_team)
# initial line position of roster html table
begin_roster <- grep('id="roster"', html_doc)
# find the line where the html ends
line_counter <- begin_roster
while (!grepl("</table>", html_doc[line_counter])) {
line_counter <- line_counter + 1
}
# read roster table as data.frame and export it as csv
roster <- readHTMLTable(html_doc[begin_roster:line_counter])
roster <- roster[[1]]
roster_file_name <- paste0('rawdata/roster-data/roster-', team_names[i], '.csv')
if (!file.exists(roster_file_name)) {
file.create(roster_file_name)
write.csv(roster, file = roster_file_name)
}
# initial line position of totals html table
begin_totals <- grep('id="totals"', html_doc)
# find the line where the html ends
line_counter <- begin_totals
while (!grepl("</table>", html_doc[line_counter])) {
line_counter <- line_counter + 1
}
# read totals table as data.frame and export it as csv
totals <- readHTMLTable(html_doc[begin_totals:line_counter])
totals <- totals[[1]]
totals_file_name <- paste0('rawdata/stat-data/stats-', team_names[i], '.csv')
if (!file.exists(totals_file_name)) {
file.create(totals_file_name)
write.csv(totals, file = totals_file_name)
}
# initial line position of salaries html table
begin_salaries <- grep('id="salaries"', html_doc)
# find the line where the html ends
line_counter <- begin_salaries
while (!grepl("</table>", html_doc[line_counter])) {
line_counter <- line_counter + 1
}
# read salaries table as data.frame and export it as csv
salaries <- readHTMLTable(html_doc[begin_salaries:line_counter])
salaries <- salaries[[1]]
salaries_file_name <- paste0('rawdata/salary-data/salaries-', team_names[i], '.csv')
if (!file.exists(salaries_file_name)) {
file.create(salaries_file_name)
write.csv(salaries, file = salaries_file_name)
}
}
library("XML")
multmerge = function(mypath){
filenames=list.files(path=~/Desktop/stat133-final-prof/rawdata/stat-data,
full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)}, datalist)
read.csv(~/Desktop/stat133-final-prof/rawdata/stat-data)
read.csv(Desktop/stat133-final-prof/rawdata/stat-data)
multmerge = function(mypath){
read.csv(~/Desktop/stat133-final-prof/rawdata/stat-data)
Reduce(function(x,y) {merge(x,y)}, datalist)
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)})
mymergeddata = multmerge('~/Desktop/stat133-final-proj/data/rawdata/stat-data')
mymergeddata
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)})
}
mymergeddata = multmerge('~/Desktop/stat133-final-proj/data/rawdata/stat-data')
mymergeddata
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)})
}
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)})
}
mymergeddata = multmerge('~/Desktop/stat133-final-proj/data/rawdata/stat-data')
mymergeddata
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)})
}
mymergeddata = multmerge('~/Desktop/stat133-final-proj/data/rawdata/stat-data')
mymergeddata
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)})
}
mymergeddata = multmerge('~/Desktop/stat133-final-proj/data/rawdata/stat-data')
mymergeddata
library(XML)
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)})
}
setwd(~/Desktop/stat133-final-proj)
setwd(~/Desktop/stat133-final-proj)
setwd("~/Desktop/stat133-final-proj")
read.csv(rawdata/stat-data/file = stats-ATL.csv)
read.csv(rawdata/stat-data/stats-ATL.csv)
read.csv(~/rawdata/stat-data/stats-ATL.csv)
read.csv("~/rawdata/stat-data/stats-ATL.csv")
read.csv("rawdata/stat-data/stats-ATL.csv")
read.csv("data/rawdata/stat-data/stats-ATL.csv")
read.csv("data/rawdata/stat-data/stats-BOS.csv")
mydata1 = read.csv("data/rawdata/stat-data/stats-ATL.csv")
mydata2 = read.csv("data/rawdata/stat-data/stats-BOS.csv")
myfulldata = merge(mydata1, mydata2)
myfulldata
View(myfulldata)
mydata1 = read.csv("data/rawdata/stat-data/stats-ATL.csv")
mydata2 = read.csv("data/rawdata/stat-data/stats-BOS.csv")
myfulldata = merge(mydata1, mydata2)
myfulldata
mydata1 = read.csv("data/rawdata/stat-data/stats-ATL.csv", header = T)
mydata2 = read.csv("data/rawdata/stat-data/stats-BOS.csv", header = T)
myfulldata = merge(mydata1, mydata2)
myfulldata
View(myfulldata)
View(mydata2)
View(mydata1)
mydata1 = read.csv("data/rawdata/stat-data/stats-ATL.csv", header = T)
mydata2 = read.csv("data/rawdata/stat-data/stats-BOS.csv", header = T)
myfulldata = merge(mydata1, mydata2, all = L)
myfulldata
setwd("~/Desktop/stat133-final-proj")
mydata1 = read.csv("data/rawdata/stat-data/stats-ATL.csv", header = T)
mydata2 = read.csv("data/rawdata/stat-data/stats-BOS.csv", header = T)
myfulldata = rbind(mydata1, mydata2)
myfulldata
View(myfulldata)
setwd("~/Desktop/stat133-final-proj/datarawdata/stat-data")
getwd
getwd("~/Desktop/stat133-final-proj/datarawdata/stat-data")
setwd("~/Desktop/stat133-final-proj/datarawdata/stat-data")
setwd("~/Desktop/stat133-final-proj/data/rawdata/stat-data")
files <- list.files(pattern = "*.csv")
files
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles
View(myfiles)
files <- list.files(pattern = "*.csv")
files
View(myfiles)
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles
View(myfiles)
path <- "~/Desktop/stat133-final-proj/data/rawdata/stat-data"
stat_csv <- list.files(path = path, pattern="*.csv")
for (i in 1:length(stat_csv)) {
stat = read.csv(stat_csv[i], header = TRUE)
x <- rbind(x,stat)
}
file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/stat-data") #where you have your files
your_data_frame <- do.call(rbind,lapply(file_names,read.csv))
View(your_data_frame)
roster_file_name <- dir("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
roster_data_frame <- do.call(rbind,lapply(roster_file_names,read.csv))
View(roster_data_frame)
roster_file_name <- dir("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
roster_data_frame <- do.call(rbind,lapply(roster_file_names,read.csv))
roster_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
roster_data_frame <- do.call(rbind,lapply(roster_file_names,read.csv))
View(roster_data_frame)
roster_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
roster_data_frame <- do.call(rbind,lapply(roster_file_names,read.csv))
stat_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/stat-data") #where you have your files
stat_data_frame <- do.call(rbind,lapply(stat_file_names,read.csv))
View(stat_data_frame)
roster_data_frame <- do.call(rbind,lapply(roster_file_names,read.csv))
roster_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
roster_data_frame <- do.call(rbind,lapply(roster_file_names,read.csv))
list.files("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
stat_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/stat-data") #where you have your files
roster_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
roster_data_frame <- do.call(rbind,lapply(roster_file_names,read.csv))
salary_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/salary-data")
salary_data_frame <- do.call(rbind,lapply(salary_file_names,read.csv))
View(salary_data_frame)
setwd(~/Desktop)
setwd("~/Desktop")
salary_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/salary-data")
salary_data_frame <- do.call(rbind,lapply(salary_file_names,read.csv))
View(salary_data_frame)
salary_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/salary-data")
salary_file_names
stat_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/stat-data") #where you have your files
stat_data_frame <- do.call(rbind,lapply(stat_file_names,read.csv))
View(stat_data_frame)
stat_file_names <- dir("~/Desktop/stat133-final-proj/data/rawdata/stat-data") #where you have your files
stat_data_frame <- do.call(rbind,lapply(stat_file_names,read.csv))
stat_file_names <- list.files("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
stat_file_names <- list.files("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
stat_data_frame <- do.call(rbind, lapply(stat_file_names,read.csv))
pattern = "*.csv")
pattern = "*.csv")
files <- "~/Desktop/stat133-final-proj/data/rawdata/roster-data",
pattern = "*.csv")
files <- list.files("~/Desktop/stat133-final-proj/data/rawdata/roster-data",
pattern = "*.csv")
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
files
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
files <- list.files("~/Desktop/stat133-final-proj/data/rawdata/roster-data",
pattern = "*.csv")
files
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles
View(myfiles)
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
getwd
getwd()
files <- list.files("~/Desktop/stat133-final-proj/data/rawdata/stat-data",
pattern = "*.csv")
files
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles
View(myfiles)
files
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
setwd("~/Desktop/stat133-final-proj/data/rawdata/stat-data")
files <- list.files("~/Desktop/stat133-final-proj/data/rawdata/stat-data",
pattern = "*.csv")
files
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles
View(myfiles)
setwd("~/Desktop/stat133-final-proj/data/rawdata/stat-data")
stat_files <- list.files("~/Desktop/stat133-final-proj/data/rawdata/stat-data",
pattern = "*.csv")
myfiles = do.call(rbind, lapply(read.csv(stat_files, stringsAsFactors = FALSE))
View(myfiles)
myfiles = do.call(rbind, lapply(read.csv(stat_files, stringsAsFactors = FALSE))
View(myfiles)
setwd("~/Desktop/stat133-final-proj/data/rawdata/stat-data")
stat_files <- list.files("~/Desktop/stat133-final-proj/data/rawdata/stat-data",
pattern = "*.csv")
myfiles = do.call(rbind, lapply(read.csv(stat_files, stringsAsFactors = FALSE)))
View(myfiles)
setwd("~/Desktop/stat133-final-proj/data/rawdata/stat-data")
stat_files <- list.files("~/Desktop/stat133-final-proj/data/rawdata/stat-data",
pattern = "*.csv")
myfiles = do.call(rbind, lapply(stat_files, read.csv)
View(myfiles)
stat_files <- list.files("~/Desktop/stat133-final-proj/data/rawdata/stat-data",
pattern = "*.csv")
myfiles = do.call(rbind, lapply(stat_files, read.csv))
View(myfiles)
stat_files <- list.files("~/Desktop/stat133-final-proj/data/rawdata/stat-data",
pattern = "*.csv")
myfiles = do.call(rbind, lapply(stat_files, read.csv(header = TRUE)))
View(myfiles)
myfiles = do.call(rbind, lapply(stat_files, read.csv(header = TRUE)))
stat_files <- list.files("~/Desktop/stat133-final-proj/data/rawdata/stat-data",
pattern = "*.csv")
myfiles = do.call(rbind, lapply(stat_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(myfiles)
stat_path <- "~/Desktop/stat133-final-proj/data/rawdata/stat-data"
stat_files <- list.files(path = stat_path)
stat_data_frame <- do.call(rbind, lapply(stat_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(stat_data_frame)
stat_path <- "~/Desktop/stat133-final-proj/data/rawdata/stat-data"
stat_files <- list.files(path = stat_path)
stat_data_frame <- do.call(rbind, lapply(stat_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(stat_data_frame)
setwd("~/Desktop/stat133-final-proj/data/rawdata")
stat_path <- "./stat-data"
stat_files <- list.files(path = stat_path)
stat_data_frame <- do.call(rbind, lapply(stat_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(stat_data_frame)
setwd("~/Desktop/stat133-final-proj/data/rawdata")
stat_path <- "./stat-data"
setwd("~/Desktop/stat133-final-proj/data/rawdata/stat-data")
stat_path <- "./stat-data"
stat_files <- list.files(path = stat_path)
stat_data_frame <- do.call(rbind, lapply(stat_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(stat_data_frame)
setwd("~/Desktop/stat133-final-proj/data/rawdata/stat-data")
stat_path <- "~/Desktop/stat133-final-proj/data/rawdata/stat-data"
stat_files <- list.files(path = stat_path)
stat_data_frame <- do.call(rbind, lapply(stat_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(stat_data_frame)
setwd("~/Desktop/stat133-final-proj/data/rawdata/salary-data")
salary_path <- "~/Desktop/stat133-final-proj/data/rawdata/salary-data"
salary_files <- list.files(path = salary_path)
salary_data_frame <- do.call(rbind, lapply(salary_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(salary_data_frame)
View(stat_data_frame)
setwd("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
roster_path <- "~/Desktop/stat133-final-proj/data/rawdata/roster-data"
roster_files <- list.files(path = roster_path)
roster_data_frame <- do.call(rbind, lapply(roster_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(roster_data_frame)
setwd("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
roster_path <- "~/Desktop/stat133-final-proj/data/rawdata/roster-data"
roster_files <- list.files(path = roster_path)
View(roster_data_frame)
setwd("~/Desktop/stat133-final-proj/data/rawdata/salary-data")
salary_path <- "~/Desktop/stat133-final-proj/data/rawdata/salary-data"
salary_files <- list.files(path = salary_path)
salary_data_frame <- do.call(rbind, lapply(salary_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(salary_data_frame)
roster_files
roster_data_frame <- do.call(rbind, lapply(roster_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
setwd("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
roster_path <- "~/Desktop/stat133-final-proj/data/rawdata/roster-data"
roster_files <- list.files(path = roster_path)
roster_data_frame <- do.call(rbind, lapply(roster_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
setwd("~/Desktop/stat133-final-proj/data/rawdata/stat-data")
stat_path <- "~/Desktop/stat133-final-proj/data/rawdata/stat-data"
stat_files <- list.files(path = stat_path)
stat_data_frame <- do.call(rbind, lapply(stat_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(stat_data_frame)
setwd("~/Desktop/stat133-final-proj/data/rawdata/salary-data")
salary_path <- "~/Desktop/stat133-final-proj/data/rawdata/salary-data"
salary_files <- list.files(path = salary_path)
salary_data_frame <- do.call(rbind, lapply(salary_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(salary_data_frame)
setwd("~/Desktop/stat133-final-proj/data/rawdata/roster-data")
roster_path <- "~/Desktop/stat133-final-proj/data/rawdata/roster-data"
roster_files <- list.files(path = roster_path)
roster_data_frame <- do.call(rbind, lapply(roster_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(roster_data_frame)
roster_data_frame <- do.call(rbind, lapply(roster_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
roster_files <- list.files(path = roster_path)
roster_data_frame <- do.call(rbind, lapply(roster_files, function(x) read.csv(x, stringsAsFactors = FALSE)))
readHTMLTable(http://www.basketball-reference.com/teams/TOR/2016.html)
readHTMLTable("http://www.basketball-reference.com/teams/TOR/2016.html")
roster_files <- list.files(path = roster_path)
roster_data_frame <- do.call(rbind, lapply(roster_files, function(x) read.csv(x, header = TRUE, stringsAsFactors = FALSE)))
View(roster_data_frame)
